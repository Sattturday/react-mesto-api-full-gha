{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0422\\u0438\\u043C\\u043E\\u0444\\u0435\\u0439\\\\dev\\\\react-mesto-api-full-gha\\\\frontend\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { AppContext } from '../contexts/AppContext';\nimport { login, register, checkToken } from '../utils/auth';\nimport api from '../utils/api';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmationPopup from './ConfirmationPopup';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoToolTip';\nimport Layout from './Layout';\nimport Main from './Main';\nimport Login from './Login';\nimport Register from './Register';\nimport PageNotFound from './PageNotFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingContent, setIsLoadingContent] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [deletedCard, setDeletedCard] = useState(null);\n  const [infoMessage, setInfoMessage] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (loggedIn) {\n      setIsLoadingContent(true);\n      api.getUserInfo().then(setCurrentUser).catch(err => console.error(err)).finally(() => setIsLoadingContent(false));\n      api.getInitialCards().then(res => setCards(res)).catch(err => console.error(err)).finally(() => setIsLoadingContent(false));\n    }\n  }, [loggedIn]);\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  // открытие и закрытие попапов\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n    setDeletedCard(null);\n    setInfoMessage(null);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function handleCardDelete(card) {\n    setDeletedCard(card);\n  }\n  function handleInfoMessage(message) {\n    setInfoMessage(message);\n  }\n\n  // обновление аватара и инфо юзера\n  function handleUpdateAvatar(data) {\n    function makeRequest() {\n      return api.updateAvatar(data).then(setCurrentUser);\n    }\n    handleSubmit(makeRequest, false);\n  }\n  function handleUpdateUser(data) {\n    function makeRequest() {\n      return api.setUserInfo(data).then(setCurrentUser);\n    }\n    handleSubmit(makeRequest, false);\n  }\n\n  // добавление и удаление карточек, лайки\n  function handleAddPlaceSubmit(data) {\n    function makeRequest() {\n      return api.addCard(data).then(newCard => setCards([newCard, ...cards]));\n    }\n    handleSubmit(makeRequest, false);\n  }\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    function makeRequest() {\n      return api.toggleLikeCard(card._id, isLiked).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      });\n    }\n    handleSubmit(makeRequest, false);\n  }\n  function handleConfirmDelete() {\n    const cardId = deletedCard._id;\n    function makeRequest() {\n      return api.deleteCard(cardId).then(() => {\n        setCards(state => state.filter(c => c._id !== cardId));\n      });\n    }\n    handleSubmit(makeRequest, false);\n  }\n\n  // авторизация\n  function handleRegister(values) {\n    function makeRequest() {\n      return register(values).then(() => {\n        navigate('/sign-in');\n      });\n    }\n    handleSubmit(makeRequest, true);\n  }\n  function handleLogin(values) {\n    function makeRequest() {\n      return login(values).then(data => {\n        if (data.token) {\n          localStorage.setItem('token', data.token);\n          setUserEmail(values.email);\n          setLoggedIn(true);\n          navigate('/react-mesto-auth');\n          return data;\n        } else {\n          return;\n        }\n      });\n    }\n    handleSubmit(makeRequest, false);\n  }\n  function tokenCheck() {\n    const token = localStorage.getItem('token');\n    function makeRequest() {\n      return checkToken().then(data => {\n        setUserEmail(data.data.email);\n        setLoggedIn(true);\n        navigate('/react-mesto-auth');\n      });\n    }\n    if (token) {\n      handleSubmit(makeRequest, false);\n    }\n  }\n\n  // отправка запросов\n  function handleSubmit(request, showInfo) {\n    setIsLoading(true);\n    request().then(() => {\n      closeAllPopups();\n      if (showInfo) {\n        handleSuccess();\n      }\n    }).catch(err => {\n      console.log(err);\n      handleError();\n    }).finally(() => setIsLoading(false));\n  }\n\n  // обработка ошибок запросов\n  function handleError() {\n    return setInfoMessage({\n      text: 'Что-то пошло не так! Попробуйте ещё раз.',\n      isSuccess: false\n    });\n  }\n\n  // обработка успешной регистрации\n  function handleSuccess() {\n    return setInfoMessage({\n      text: 'Вы успешно зарегистрировались!',\n      isSuccess: true\n    });\n  }\n\n  // выход из приложения\n  function handleLogout() {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n    setUserEmail('');\n  }\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loggedIn,\n      userEmail,\n      isLoading,\n      isLoadingContent,\n      closeAllPopups\n    },\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Layout, {\n            onLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 36\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/react-mesto-auth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/sign-in\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"react-mesto-auth\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              element: Main,\n              loggedIn: loggedIn,\n              cards: cards,\n              onEditProfile: handleEditProfileClick,\n              onAddPlace: handleAddPlaceClick,\n              onEditAvatar: handleEditAvatarClick,\n              onCardClick: handleCardClick,\n              onCardLike: handleCardLike,\n              onCardDelete: handleCardDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"sign-up\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              handleRegister: handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"sign-in\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: handleLogin,\n              handleInfoMessage: handleInfoMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(PageNotFound, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationPopup, {\n        isOpen: deletedCard,\n        onConfirm: handleConfirmDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        message: infoMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"prljtK9/VoIDvNQZDB/UFB30hV8=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Routes","Route","Navigate","useNavigate","CurrentUserContext","AppContext","login","register","checkToken","api","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ConfirmationPopup","ProtectedRoute","InfoTooltip","Layout","Main","Login","Register","PageNotFound","jsxDEV","_jsxDEV","App","_s","isLoading","setIsLoading","isLoadingContent","setIsLoadingContent","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","deletedCard","setDeletedCard","infoMessage","setInfoMessage","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","userEmail","setUserEmail","navigate","getUserInfo","then","catch","err","console","error","finally","getInitialCards","res","tokenCheck","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","handleCardClick","card","handleCardDelete","handleInfoMessage","message","handleUpdateAvatar","data","makeRequest","updateAvatar","handleSubmit","handleUpdateUser","setUserInfo","handleAddPlaceSubmit","addCard","newCard","handleCardLike","isLiked","likes","some","i","_id","toggleLikeCard","state","map","c","handleConfirmDelete","cardId","deleteCard","filter","handleRegister","values","handleLogin","token","localStorage","setItem","email","getItem","request","showInfo","handleSuccess","log","handleError","text","isSuccess","handleLogout","removeItem","Provider","value","children","path","element","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","index","to","replace","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onCardLike","onCardDelete","isOpen","onUpdateAvatar","onUpdateUser","onConfirm","_c","$RefreshReg$"],"sources":["C:/Users/Тимофей/dev/react-mesto-api-full-gha/frontend/src/components/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport { AppContext } from '../contexts/AppContext';\r\nimport { login, register, checkToken } from '../utils/auth';\r\nimport api from '../utils/api';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ConfirmationPopup from './ConfirmationPopup';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport InfoTooltip from './InfoToolTip';\r\nimport Layout from './Layout';\r\nimport Main from './Main';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport PageNotFound from './PageNotFound';\r\n\r\nfunction App() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isLoadingContent, setIsLoadingContent] = useState(false);\r\n\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [deletedCard, setDeletedCard] = useState(null);\r\n  const [infoMessage, setInfoMessage] = useState(null);\r\n\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [cards, setCards] = useState([]);\r\n\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [userEmail, setUserEmail] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      setIsLoadingContent(true);\r\n      api\r\n        .getUserInfo()\r\n        .then(setCurrentUser)\r\n        .catch((err) => console.error(err))\r\n        .finally(() => setIsLoadingContent(false));\r\n\r\n      api\r\n        .getInitialCards()\r\n        .then((res) => setCards(res))\r\n        .catch((err) => console.error(err))\r\n        .finally(() => setIsLoadingContent(false));\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  useEffect(() => {\r\n    tokenCheck();\r\n  }, []);\r\n\r\n  // открытие и закрытие попапов\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setSelectedCard(null);\r\n    setDeletedCard(null);\r\n    setInfoMessage(null);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    setDeletedCard(card);\r\n  }\r\n\r\n  function handleInfoMessage(message) {\r\n    setInfoMessage(message);\r\n  }\r\n\r\n  // обновление аватара и инфо юзера\r\n  function handleUpdateAvatar(data) {\r\n    function makeRequest() {\r\n      return api.updateAvatar(data).then(setCurrentUser);\r\n    }\r\n    handleSubmit(makeRequest, false);\r\n  }\r\n\r\n  function handleUpdateUser(data) {\r\n    function makeRequest() {\r\n      return api.setUserInfo(data).then(setCurrentUser);\r\n    }\r\n    handleSubmit(makeRequest, false);\r\n  }\r\n\r\n  // добавление и удаление карточек, лайки\r\n  function handleAddPlaceSubmit(data) {\r\n    function makeRequest() {\r\n      return api.addCard(data).then((newCard) => setCards([newCard, ...cards]));\r\n    }\r\n    handleSubmit(makeRequest, false);\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n    function makeRequest() {\r\n      return api.toggleLikeCard(card._id, isLiked).then((newCard) => {\r\n        setCards((state) =>\r\n          state.map((c) => (c._id === card._id ? newCard : c))\r\n        );\r\n      });\r\n    }\r\n    handleSubmit(makeRequest, false);\r\n  }\r\n\r\n  function handleConfirmDelete() {\r\n    const cardId = deletedCard._id;\r\n\r\n    function makeRequest() {\r\n      return api.deleteCard(cardId).then(() => {\r\n        setCards((state) => state.filter((c) => c._id !== cardId));\r\n      });\r\n    }\r\n    handleSubmit(makeRequest, false);\r\n  }\r\n\r\n  // авторизация\r\n  function handleRegister(values) {\r\n    function makeRequest() {\r\n      return register(values).then(() => {\r\n        navigate('/sign-in');\r\n      });\r\n    }\r\n    handleSubmit(makeRequest, true);\r\n  }\r\n\r\n  function handleLogin(values) {\r\n    function makeRequest() {\r\n      return login(values).then((data) => {\r\n        if (data.token) {\r\n          localStorage.setItem('token', data.token);\r\n          setUserEmail(values.email);\r\n          setLoggedIn(true);\r\n          navigate('/react-mesto-auth');\r\n          return data;\r\n        } else {\r\n          return;\r\n        }\r\n      });\r\n    }\r\n    handleSubmit(makeRequest, false);\r\n  }\r\n\r\n  function tokenCheck() {\r\n    const token = localStorage.getItem('token');\r\n\r\n    function makeRequest() {\r\n      return checkToken().then((data) => {\r\n        setUserEmail(data.data.email);\r\n        setLoggedIn(true);\r\n        navigate('/react-mesto-auth');\r\n      });\r\n    }\r\n\r\n    if (token) {\r\n      handleSubmit(makeRequest, false);\r\n    }\r\n  }\r\n\r\n  // отправка запросов\r\n  function handleSubmit(request, showInfo) {\r\n    setIsLoading(true);\r\n    request()\r\n      .then(() => {\r\n        closeAllPopups();\r\n        if (showInfo) {\r\n          handleSuccess();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        handleError();\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  }\r\n\r\n  // обработка ошибок запросов\r\n  function handleError() {\r\n    return setInfoMessage({\r\n      text: 'Что-то пошло не так! Попробуйте ещё раз.',\r\n      isSuccess: false,\r\n    });\r\n  }\r\n\r\n  // обработка успешной регистрации\r\n  function handleSuccess() {\r\n    return setInfoMessage({\r\n      text: 'Вы успешно зарегистрировались!',\r\n      isSuccess: true,\r\n    });\r\n  }\r\n\r\n  // выход из приложения\r\n  function handleLogout() {\r\n    localStorage.removeItem('token');\r\n    setLoggedIn(false);\r\n    setUserEmail('');\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        loggedIn,\r\n        userEmail,\r\n        isLoading,\r\n        isLoadingContent,\r\n        closeAllPopups,\r\n      }}\r\n    >\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <Routes>\r\n          <Route path='/' element={<Layout onLogout={handleLogout} />}>\r\n            <Route\r\n              index\r\n              element={\r\n                loggedIn ? (\r\n                  <Navigate to='/react-mesto-auth' />\r\n                ) : (\r\n                  <Navigate to='/sign-in' replace />\r\n                )\r\n              }\r\n            />\r\n            <Route\r\n              path='react-mesto-auth'\r\n              element={\r\n                <ProtectedRoute\r\n                  element={Main}\r\n                  loggedIn={loggedIn}\r\n                  cards={cards}\r\n                  onEditProfile={handleEditProfileClick}\r\n                  onAddPlace={handleAddPlaceClick}\r\n                  onEditAvatar={handleEditAvatarClick}\r\n                  onCardClick={handleCardClick}\r\n                  onCardLike={handleCardLike}\r\n                  onCardDelete={handleCardDelete}\r\n                />\r\n              }\r\n            />\r\n            <Route\r\n              path='sign-up'\r\n              element={<Register handleRegister={handleRegister} />}\r\n            />\r\n            <Route\r\n              path='sign-in'\r\n              element={\r\n                <Login\r\n                  handleLogin={handleLogin}\r\n                  handleInfoMessage={handleInfoMessage}\r\n                />\r\n              }\r\n            />\r\n            <Route path='*' element={<PageNotFound />} />\r\n          </Route>\r\n        </Routes>\r\n\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n\r\n        <ConfirmationPopup\r\n          isOpen={deletedCard}\r\n          onConfirm={handleConfirmDelete}\r\n        />\r\n\r\n        <ImagePopup card={selectedCard} />\r\n\r\n        <InfoTooltip message={infoMessage} />\r\n      </CurrentUserContext.Provider>\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}