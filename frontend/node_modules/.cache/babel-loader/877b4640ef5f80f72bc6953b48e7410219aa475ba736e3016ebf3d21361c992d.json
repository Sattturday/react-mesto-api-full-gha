{"ast":null,"code":"import { configApi } from './utils';\nconst _checkAnswer = res => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n};\nconst _request = (url, options) => {\n  return fetch(`${configApi.BASE_URL}${url}`, options).then(_checkAnswer);\n};\nexport const register = ({\n  email,\n  password\n}) => {\n  return _request('/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n};\nexport const login = ({\n  email,\n  password\n}) => {\n  return _request('/signin', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n};\nexport const checkToken = token => {\n  return _request('/users/me', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  });\n};","map":{"version":3,"names":["configApi","_checkAnswer","res","ok","json","Promise","reject","status","_request","url","options","fetch","BASE_URL","then","register","email","password","method","headers","body","JSON","stringify","login","checkToken","token","Authorization"],"sources":["C:/Users/Тимофей/dev/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["import { configApi } from './utils';\r\n\r\nconst _checkAnswer = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\nconst _request = (url, options) => {\r\n  return fetch(`${configApi.BASE_URL}${url}`, options).then(_checkAnswer);\r\n};\r\n\r\nexport const register = ({ email, password }) => {\r\n  return _request('/signup', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  });\r\n};\r\n\r\nexport const login = ({ email, password }) => {\r\n  return _request('/signin', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  });\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n  return _request('/users/me', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,SAAS;AAEnC,MAAMC,YAAY,GAAIC,GAAG,IAAK;EAC5B,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;AAChD,CAAC;AAED,MAAMC,QAAQ,GAAGA,CAACC,GAAG,EAAEC,OAAO,KAAK;EACjC,OAAOC,KAAK,CAAE,GAAEX,SAAS,CAACY,QAAS,GAAEH,GAAI,EAAC,EAAEC,OAAO,CAAC,CAACG,IAAI,CAACZ,YAAY,CAAC;AACzE,CAAC;AAED,OAAO,MAAMa,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAC/C,OAAOR,QAAQ,CAAC,SAAS,EAAE;IACzBS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMM,KAAK,GAAGA,CAAC;EAAEP,KAAK;EAAEC;AAAS,CAAC,KAAK;EAC5C,OAAOR,QAAQ,CAAC,SAAS,EAAE;IACzBS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMO,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOhB,QAAQ,CAAC,WAAW,EAAE;IAC3BS,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCO,aAAa,EAAG,UAASD,KAAM;IACjC;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}