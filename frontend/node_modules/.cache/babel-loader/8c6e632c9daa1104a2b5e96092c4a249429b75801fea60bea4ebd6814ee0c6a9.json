{"ast":null,"code":"import { BASE_URL } from './utils';\nclass Api {\n  constructor({\n    BASE_URL\n  }) {\n    this.baseUrl = BASE_URL;\n  }\n  _checkAnswer(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  _request(url, options) {\n    return fetch(`${this.baseUrl}${url}`, options).then(this._checkAnswer);\n  }\n  getUserInfo() {\n    return this._request('/users/me', {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  setUserInfo({\n    name,\n    about\n  }) {\n    return this._request('/users/me', {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    });\n  }\n  getInitialCards() {\n    const token = localStorage.getItem('jwt');\n    return this._request('/cards', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      }\n    });\n  }\n  addCard({\n    name,\n    link\n  }) {\n    const token = localStorage.getItem('jwt');\n    return this._request('/cards', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    });\n  }\n  _addLikeCard(id) {\n    const token = localStorage.getItem('jwt');\n    return this._request(`/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      }\n    });\n  }\n  _deleteLikeCard(id) {\n    const token = localStorage.getItem('jwt');\n    return this._request(`/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      }\n    });\n  }\n  toggleLikeCard(cardId, isLiked) {\n    if (isLiked) {\n      return this._deleteLikeCard(cardId);\n    } else {\n      return this._addLikeCard(cardId);\n    }\n  }\n  deleteCard(cardId) {\n    const token = localStorage.getItem('jwt');\n    return this._request(`/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      }\n    });\n  }\n  updateAvatar({\n    avatar\n  }) {\n    const token = localStorage.getItem('jwt');\n    return this._request('/users/me/avatar', {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    });\n  }\n}\nconst api = new Api(BASE_URL);\nexport default api;","map":{"version":3,"names":["BASE_URL","Api","constructor","baseUrl","_checkAnswer","res","ok","json","Promise","reject","status","_request","url","options","fetch","then","getUserInfo","headers","setUserInfo","name","about","method","body","JSON","stringify","getInitialCards","token","localStorage","getItem","addCard","link","_addLikeCard","id","_deleteLikeCard","toggleLikeCard","cardId","isLiked","deleteCard","updateAvatar","avatar","api"],"sources":["C:/Users/Тимофей/dev/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["import { BASE_URL } from './utils';\r\n\r\nclass Api {\r\n  constructor({ BASE_URL}) {\r\n    this.baseUrl = BASE_URL;\r\n  }\r\n\r\n  _checkAnswer(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  _request(url, options) {\r\n    return fetch(`${this.baseUrl}${url}`, options).then(this._checkAnswer);\r\n  }\r\n\r\n  getUserInfo() {\r\n    return this._request('/users/me', {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    });\r\n  }\r\n\r\n  setUserInfo({ name, about }) {\r\n    return this._request('/users/me', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about,\r\n      }),\r\n    });\r\n  }\r\n\r\n  getInitialCards() {\r\n    const token = localStorage.getItem('jwt');\r\n\r\n    return this._request('/cards', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': token\r\n      },\r\n    });\r\n  }\r\n\r\n  addCard({ name, link }) {\r\n    const token = localStorage.getItem('jwt');\r\n    \r\n    return this._request('/cards', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': token\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link,\r\n      }),\r\n    });\r\n  }\r\n\r\n  _addLikeCard(id) {\r\n    const token = localStorage.getItem('jwt');\r\n    \r\n    return this._request(`/cards/${id}/likes`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': token\r\n      },\r\n    });\r\n  }\r\n\r\n  _deleteLikeCard(id) {\r\n    const token = localStorage.getItem('jwt');\r\n    \r\n    return this._request(`/cards/${id}/likes`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': token\r\n      },\r\n    });\r\n  }\r\n\r\n  toggleLikeCard(cardId, isLiked) {\r\n    if (isLiked) {\r\n      return this._deleteLikeCard(cardId);\r\n    } else {\r\n      return this._addLikeCard(cardId);\r\n    }\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    const token = localStorage.getItem('jwt');\r\n    \r\n    return this._request(`/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': token\r\n      },\r\n    });\r\n  }\r\n\r\n  updateAvatar({ avatar }) {\r\n    const token = localStorage.getItem('jwt');\r\n    \r\n    return this._request('/users/me/avatar', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': token\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: avatar,\r\n      }),\r\n    });\r\n  }\r\n}\r\n\r\nconst api = new Api(BASE_URL);\r\n\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}